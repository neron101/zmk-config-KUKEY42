#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tapdance_kana: tapdance_kana {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE_KANA";
            #binding-cells = <0>;
            bindings = <&kp INT2>, <&kp LANGUAGE_2>, <&sl 1>;

            tapping-term-ms = <400>;
        };

        WheelScroll: WheelScroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "WHEELSCROLL";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E         &kp R        &kp T                                      &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A               &kp S           &kp D         &kp F        &kp G        &mkp MB1         &kp MINUS    &kp H          &kp J  &kp K      &kp L    &kp CLCK
&kp Z               &kp X           &kp C         &kp V        &kp B        &mkp MB2         &kp TILDE    &kp N          &kp M  &kp COMMA  &kp DOT  &kp RS(QMARK)
&kp LG(LEFT_BRACE)  &lt 5 LEFT_ALT  &kp LEFT_WIN  &lt 6 SPACE  &lt 2 SPACE  &lt 4 SPACE      &lt 3 ENTER  &kp BACKSPACE                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&WheelScroll SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp F7  &kp F8  &kp F9  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans  &mo 6       &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10
&trans  &trans  &trans  &trans  &trans  &mo 1       &trans  &trans                          &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        NUM {
            bindings = <
&kp NUMBER_1      &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp N5                              &kp NUMBER_6  &kp N7            &kp N8            &kp N9             &kp N0
&kp LEFT          &kp UP_ARROW    &kp RIGHT     &kp LG(X)     &kp LANG1  &mkp MB1      &kp MINUS  &kp HOME      &kp RS(NUMBER_1)  &kp MINUS         &kp TILDE          &kp CLCK
&kp LG(Z)         &kp DOWN_ARROW  &kp LG(C)     &kp LG(V)     &kp LANG2  &mkp MB2      &kp EQUAL  &kp END       &kp COLON         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp QMARK
&kp LEFT_CONTROL  &kp LEFT_ALT    &kp TAB       &trans        &trans     &trans        &trans     &trans                                                               &kp RIGHT_SHIFT
            >;
        };

        ARROW {
            bindings = <
&kp LS(NUMBER_1)     &kp AT_SIGN     &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)                                                 &kp RS(NUMBER_6)  &kp RS(N7)        &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RS(N0)
&kp LEFT             &kp UP_ARROW    &kp RIGHT         &kp QUESTION      &kp LANGUAGE_1            &mkp MB1              &kp MINUS  &kp HOME          &kp RS(NUMBER_1)  &kp MINUS     &kp TILDE             &kp QMARK
&mt LEFT_SHIFT HASH  &kp DOWN_ARROW  &kp SINGLE_QUOTE  &kp SEMICOLON     &kp LANGUAGE_2            &mkp MB2              &kp EQUAL  &kp END           &trans            &trans        &trans                &kp RS(SLASH)
&kp LEFT_CONTROL     &kp LEFT_ALT    &kp TAB           &trans            &mt LEFT_SHIFT LS(SPACE)  &lt 1 LANGUAGE_2      &trans     &trans                                                                  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_MINUS) LC(KP_PLUS)>;
        };

        MOUSE {
            bindings = <
&kp NUMBER_1          &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_4      &kp N5                                   &kp NUMBER_6      &kp N7      &kp N8                &kp N9             &kp N0
&kp LS(NUMBER_1)      &kp LS(NUMBER_2)  &kp LS(NUMBER_3)   &kp LS(NUMBER_4)  &kp LS(N5)      &mkp MB1      &kp MINUS  &kp RS(NUMBER_6)  &kp RS(N7)  &kp RS(N8)            &kp RS(N9)         &kp RS(N0)
&kp LG(LEFT_BRACKET)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LANGUAGE_1    &kp LANGUAGE_2  &mkp MB2      &kp EQUAL  &kp TILDE         &kp COLON   &kp LG(LEFT_BRACKET)  &kp RIGHT_BRACKET  &kp SLASH
&kp LEFT_GUI          &lt 5 Q           &kp TAB            &lt 6 SPACE       &lt 6 SPACE     &trans        &trans     &kp BACKSPACE                                                          &bootloader
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans        &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ALT  &trans  &trans  &trans  &trans      &trans  &trans                          &kp ESCAPE
            >;
        };

        BT {
            bindings = <
&trans       &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &sys_reset   &trans        &trans        &trans        &trans        &trans
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&bootloader  &sys_reset    &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
